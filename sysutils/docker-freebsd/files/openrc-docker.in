#!/sbin/openrc-run

name="docker"
command="%%PREFIX%%/bin/docker"
command_args="-d -e jail -s zfs -g ${docker_dir} -D >/var/log/docker.log 2>/var/log/docker.log"
pidfile=/var/run/docker.pid
supervisor=supervise-daemon

: ${docker_dir=/usr/docker}
: ${docker_nat_pf=YES}
: ${docker_nat_iface=NONE}

start_pre() {
	if [ ! -d "${docker_dir}" ] ; then
		einfo "Missing ${docker_dir}! Please create / mount a ZFS dataset at this location."
		exit 1
	fi
}

start_post() {
	kldstat | grep -q 'linux64'
	if [ $? -ne 0 -a -e "/boot/kernel/linux64.ko" ] ; then
		kldload linux64
	fi

	# Check for NAT support via PF
	# This is an ugly experimental hack for now, eventually will go away
	if [ "${docker_nat_pf}" != "YES" ] ; then return ; fi

	# Load PF if not already
	kldstat | grep -q 'pf.ko'
	if [ $? -ne 0 -a -e "/boot/kernel/pf.ko" ] ; then
		kldload pf
	fi

	# Check if PF rules already loaded
	/sbin/pfctl -s nat 2>/dev/null | grep -q 172.17
	if [ $? -eq 0 ] ; then return ; fi

	if [ "${docker_nat_iface}" != "NONE" ] ; then
		iface="${docker_nat_iface}"
	else
		iface=`/usr/bin/netstat -f inet -nrW | grep '^default' | awk '{ print $6 }'`
	fi
	einfo "nat on ${iface} from 172.17.0.0/16 to any -> (${iface})" > /tmp/pf-nat-docker.$$
	/sbin/pfctl -f /tmp/pf-nat-docker.$$ 2>/dev/null
	/sbin/pfctl -e 2>/dev/null
	rm /tmp/pf-nat-docker.$$
}

depend() {
	keyword -shutdown -jail
}
